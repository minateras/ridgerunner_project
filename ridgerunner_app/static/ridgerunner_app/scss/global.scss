// GLOBAL
:root {
    --max-width: 1200px;

    --c-white: rgb(255, 255, 255);
    --c-red: rgb(200, 50, 0);
    --c-black: rgb(0, 0, 0);
    --c-gray-light: rgb(245, 245, 245);
    --c-gray-medium: rgb(225, 225, 225);
    --c-gray-dark: rgb(125, 125, 125);
    --c-green-light: rgb(220, 240, 220);
    --c-green-medium: rgb(140, 160, 140);
    --c-green-dark: rgb(40, 60, 40);

    --g-smaller: 2px;
    --g-small: 5px;
    --g-table: 7px;
    --g-big: 10px;
    --g-bigger: 20px;

    --f-smaller: 10px;
    --f-table: 11px;
    --f-small: 12px;
    --f-big: 18px;
    --f-bigger: 24px;

    --i-small: 250px;
    --i-big: 500px;

    --border: 0.5px solid;

    --border-radius: 6px;

    --t-short: 0.3s ease-in-out; // all
    --t-long: 1s ease-in-out; // all
}

* {
    border: unset;
    box-sizing: border-box;
    color: var(--c-black);
    display: block;
    font-family: 'Quicksand';
    font-size: var(--f-small);
    font-style: normal;
    font-weight: 400;
    letter-spacing: 1px;
    list-style: unset;
    margin: unset;
    padding: unset;
    text-decoration: unset;
    text-overflow: ellipsis;
    // For stopping mobile Safari from adjusting the font size:
    text-size-adjust: none;
    -moz-text-size-adjust: none;
    -ms-text-size-adjust: none;
    -webkit-text-size-adjust: none;
}

html, body {
    min-height: 100%;
}

html {
    width: 100%;
}

body {
    background-color: var(--c-gray-light);
    margin: auto;
}

a {
    display: inline-block;
    text-decoration: underline;

    &:hover {
        cursor: pointer;
    }
}

img {
    object-fit: contain;
    object-position: center;
    max-width: 100%;
    max-height: var(--i-small);

    &:hover {
        cursor: pointer;
    }
}

dialog {
    display: none;
    animation: fadeIn 0.2s ease-in forwards;
}

@keyframes fadeIn{
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

dialog[open] {
    background-color: var(--c-white);
    border-radius: var(--border-radius);
    display: flex;
    flex-direction: column;
    margin: var(--g-bigger); // Required for mobile.
    max-width: max-content;
    max-height: max-content;
    padding: var(--g-bigger);
    row-gap: var(--g-bigger);
    // Centers the dialog:
    top: calc(50% - var(--g-bigger)); // Includes the margin.
    left: calc(50% - var(--g-bigger)); // ^
    transform: translateX(-50%) translateY(-50%);
    -moz-transform: translateX(-50%) translateY(-50%);
    -ms-transform: translateX(-50%) translateY(-50%);
    -webkit-transform: translateX(-50%) translateY(-50%);

    > h1 {
        font-family: 'Roboto Mono';
        font-size: var(--f-small);
        font-weight: 600;
    }

    > img {
        max-height: var(--i-big);
    }

    &::backdrop {
        background-color: rgba(40, 60, 40, 0.2);
    }
}

// HEADER
header {
    position: sticky;
    top: 0%;
    z-index: 2;

    > .logotype-navigation {
        background-color: var(--c-green-dark);
        display: flex;
        flex-direction: column;
        padding: var(--g-bigger);
        row-gap: var(--g-bigger);

        > * {
            display: flex;
            flex-direction: row;
            margin: auto;
            max-width: var(--max-width);
            width: 100%; // Force to take up available space.

            > a {
                color: white;
                font-family: 'Roboto Mono';
                text-decoration: unset;

                &:hover {
                    transition: color var(--t-short);
                }
            }

            > .current, > a:hover {
                color: var(--c-green-medium);
            }
        }

        > .logotype {
            column-gap: var(--g-big);

            > a {
                font-size: var(--f-bigger);
            }
        }

        > nav {
            flex-wrap: wrap;
            gap: var(--g-big);
        }
    }

    > .title {
        background-color: white;
        border-bottom: 1px solid var(--c-green-light);
        padding: var(--g-bigger);

        > section {
            display: flex;
            flex-direction: column;
            margin: auto;
            max-width: var(--max-width);
            row-gap: var(--g-smaller);

            > a, > h1 {
                font-family: 'Roboto Mono';
            }

            > a {
                color: var(--c-green-medium);
            }

            > h1 {
                font-size: var(--f-bigger);
            }
        }
    }
}

// MAIN
main {
    margin: auto;
    max-width: calc(1200px + 2 * var(--g-bigger)); // The horizontal padding is included in the max width, to ensure that the main content aligns with the header content.
    padding: var(--g-bigger); // Required if the screen width is 1200 px or smaller.

    .card, .sidebar {
        background-color: white;
        border-radius: var(--border-radius);
        display: flex;
        flex-direction: column;
        padding: var(--g-bigger);
        row-gap: var(--g-bigger);
    }

    .card {

        > .heading {
            column-gap: var(--g-bigger);
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            min-height: 0px;

            > h1 {
                font-family: 'Roboto Mono';
                font-size: var(--f-big);
            }

            > img.pinned {
                align-self: center;
                height: var(--f-big);
            }
        }

        > .date {
            color: var(--c-green-medium);
            font-family: 'Roboto Mono';
            font-size: var(--f-smaller);
            margin-top: calc(-1 * var(--g-big));
            margin-bottom: calc(-1 * var(--g-big));
        }

        > .content {
            display: flex;
            flex-direction: column;
            row-gap: var(--g-big);;

            > h2, > h2 > a {
                font-family: 'Roboto Mono';
            }
        }
    }

    .sidebar > section {
        display: flex;
        flex-direction: column;
        row-gap: var(--g-small);

        > h1 {
            font-family: 'Roboto Mono';
            font-weight: 600;
        }

        > h2 {
            font-family: 'Roboto Mono';

            > a {
                font-family: inherit;
            }
        }

        > .links {
            display: flex;
            flex-direction: column;
            row-gap: var(--g-small);
        }
    }

    .card.image {
        padding: unset;
        row-gap: unset;

        > img {
            border-radius: var(--border-radius);
            max-height: var(--i-big);
            object-fit: cover;
        }
    }

    .card.image.content {

        > .img-placeholder, img {
            height: var(--i-big); // A height must be forced since there can be multiple cards on the same row.
        }

        > .img-placeholder { // To be displayed if the image is missing.
            background-color: var(--c-green-light);
            border-top-left-radius: var(--border-radius);
            border-top-right-radius: var(--border-radius);
        }

        > img {
            border-bottom-left-radius: unset;
            border-bottom-right-radius: unset;
        }

        > section { // The content.
            display: flex;
            flex-direction: column;
            padding: var(--g-bigger);
            row-gap: var(--g-big);

            > h1 { // The dog's first name.
                font-family: 'Bad Script';
                font-size: var(--f-bigger);
            }

            > .official-titles {
                color: var(--c-green-medium);
            }
        }
    }

    .card.column {
        padding-left: unset;
        padding-right: unset;
        padding-bottom: unset;

        > .heading, > section > p {
            padding-left: var(--g-bigger);
            padding-right: var(--g-bigger);
        }

        > section {
            display: flex;
            flex-direction: column;
            row-gap: var(--g-bigger);

            > .table {
                overflow-x: auto; // scroll;
            }
        }
    }

    .card.column:has(> .card.grid), .card.column:has(> img), .card.column:has(> .mentality-index) {
        background-color: unset;
        padding-top: unset;
    }

    .card.column:has(> img) {
        column-gap: var(--g-bigger);
        flex-direction: row;

        > img {
            border-radius: var(--border-radius);
            max-width: var(--i-small);
            z-index: 1;

            &:hover {
                background-color: var(--c-white);
                border-radius: 100%;
                box-shadow: 2px 2px 24px var(--c-gray-medium);
                transition-property: background-color, box-shadow;
                transition-duration: var(--t-short);
            }
        }
    }

    .card.grid {
        display: grid;
        grid-auto-rows: max-content;
        overflow-x: auto; // scroll;
        padding: unset;
        row-gap: unset;

        > .letter, > .combination {
            display: flex;
            flex-direction: column;
            padding: var(--g-bigger);
        }

        > .letter {
            background-color: var(--c-green-light);
            grid-column: 1 / 2;
            grid-row: 1 / 2;
            justify-content: center;
            min-width: 150px; // 103px;
            row-gap: var(--g-smaller);

            > * {
                color: var(--c-green-dark);
                font-family: 'Roboto Mono';
                text-align: center;
            }

            > h1 {
                font-size: var(--f-bigger);
            }

            > p {
                font-size: var(--f-smaller);
            }
        }

        > .combination {
            grid-column-start: 2;
            grid-row: 1 / 2;
            row-gap: var(--g-big);

            > h2, > p {
                font-family: 'Roboto Mono';
            }

            > h2 {
                color: var(--c-green-medium);
            }

            > section {
                display: flex;
                flex-direction: column;
                row-gap: var(--g-small);
            }

            > p {
                font-size: var(--f-smaller);
            }

            > .button {
                padding-left: var(--g-bigger);
                padding-right: var(--g-bigger);
                width: fit-content;
            }
        }

        > .table {
            display: none; // grid;
            grid-template-columns: subgrid;
            grid-column-start: 1;
            grid-row: 2 / 3;
        }
    }

    .card.hover:hover {
        box-shadow: 2px 2px 24px var(--c-gray-medium);
        cursor: pointer;
        transition: box-shadow var(--t-short);
    }

    .button { // A button or a link.
        background-color: var(--c-gray-light);
        border-radius: var(--border-radius);
        padding: var(--g-small);
        text-align: center;
        text-decoration: unset;

        &:hover {
            background-color: var(--c-green-light);
            transition: background-color var(--t-short);
        }
    }

    .quote { // A quote.
        background-color: var(--c-gray-light);
        display: flex;
        flex-direction: column;
        padding: var(--g-big);
        row-gap: var(--g-small);

        > q, > cite {
            font-size: var(--f-small);
        }

        > q {
            font-family: 'Bad Script';
        }
    }

    ul {
        display: flex;
        flex-direction: column;
        row-gap: var(--g-small);

        > li {
            display: grid;
            column-gap: var(--g-big);
            grid-template-columns: var(--g-smaller) 1fr;
            grid-auto-rows: max-content;

            > .bullet {
                align-self: center;
                background-color: black;
                border-radius: 100%;
                height: var(--g-smaller);
            }
        }
    }

    .table {
        border-top: 0.5px solid var(--c-green-light);
        border-bottom: 0.5px solid var(--c-green-light);
        display: grid;
        grid-auto-rows: max-content;

        > div {
            border: var(--border) var(--c-green-light);
            display: flex;
            flex-direction: column;
            font-size: var(--f-table);
            justify-content: center;
            padding: var(--g-table);
            text-align: center;

            > * {
                font-size: var(--f-table);
            }
        }

        > .table-heading {
            background-color: var(--c-green-light);
            font-family: 'Roboto Mono';
        }

        > .table-heading.left {
            border-left: unset;
            padding-left: var(--g-bigger);
            text-align: unset;
        }

        > .right {
            border-right: unset;
        }
    }

    .mentality-index {
        background-color: white;
        border-top: 0.5px solid var(--c-green-light);
        border-bottom: 0.5px solid var(--c-green-light);
        border-radius: var(--border-radius);
        display: grid;
        grid-template-columns: 150px repeat(2, 1fr); // 133px;
        grid-auto-rows: max-content;

        > div {
            border: var(--border) var(--c-green-light);
            display: flex;
            flex-direction: column;
            font-size: var(--f-table);
            justify-content: center;
            padding: var(--g-table);
            text-align: center;
        }

        > .table-heading {
            background-color: var(--c-green-light);
            font-family: 'Roboto Mono';
        }

        > .table-heading.left {
            border-left: unset;
            padding-left: var(--g-bigger);
            text-align: unset;
        }

        > .right {
            border-right: unset;
        }
    }
}

// FOOTER
footer {
    background-color: var(--c-green-dark);
    padding: var(--g-bigger);
    // Sticks the footer to the bottom of the screen, even if the page's content isn't enough to push it there:
    position: sticky;
    top: 100%;

    > section {
        display: flex;
        flex-direction: column;
        margin: auto;
        max-width: var(--max-width);
        row-gap: var(--g-big);

        > p, > p > a {
            color: white;
            font-family: 'Roboto Mono';
            text-align: center;
        }
    }
}

@media (max-width: 830px) {

    main {

        .card.column:has(> dialog) {
            flex-direction: column;
        }
    }
}

@media (max-width: 600px) {

    main {

        .sidebar {
            border-radius: var(--border-radius);
        }
    }
}
